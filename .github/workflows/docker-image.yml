name: Docker Image CI

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
    tags:
      - 'v*'  # Trigger on tag push (e.g., v1.0.0)

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup permissions
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build -x test -x checkstyleMain -x checkstyleTest

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/*.jar 

  lint:
    runs-on: ubuntu-latest
    needs: build  # Ensure this step runs after the build step
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Setup permissions
        run: chmod +x ./gradlew

      - name: Lint main
        run: ./gradlew checkstyleMain

      - name: Lint test
        run: ./gradlew checkstyleMain

  test:
    runs-on: ubuntu-latest
    needs: build  # Ensure this step runs after the build step
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Setup permissions
        run: chmod +x ./gradlew

      - name: Run Tests with Gradle
        run: ./gradlew test

  containerize:
    runs-on: ubuntu-latest
    needs: [lint, test]  # Ensure this step runs after the test step
    
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: test
        run: |
          ls -a

      - name: pwd
        run: |
          pwd

      - name: Build Docker image
        run: |
          docker build -t pet-store/data-transform:0.1.0 .

  publish:
    runs-on: ubuntu-latest
    needs: containerize  # Ensure this step runs after the containerize step
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Push Docker image
        run: |
          docker push pet-store/data-transform:0.1.0

      - name: Tag Docker image as 'latest' and push
        run: |
          docker push pet-store/data-transform:latest